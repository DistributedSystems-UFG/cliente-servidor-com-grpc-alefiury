# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import strings_pb2 as strings__pb2


class StringsOpsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConcatStrings = channel.unary_unary(
                '/StringsOps/ConcatStrings',
                request_serializer=strings__pb2.InString.SerializeToString,
                response_deserializer=strings__pb2.OutString.FromString,
                )
        self.LevenshteinDist = channel.unary_unary(
                '/StringsOps/LevenshteinDist',
                request_serializer=strings__pb2.InString.SerializeToString,
                response_deserializer=strings__pb2.LevDist.FromString,
                )
        self.Equal = channel.unary_unary(
                '/StringsOps/Equal',
                request_serializer=strings__pb2.InString.SerializeToString,
                response_deserializer=strings__pb2.Comp.FromString,
                )


class StringsOpsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConcatStrings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LevenshteinDist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Equal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StringsOpsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConcatStrings': grpc.unary_unary_rpc_method_handler(
                    servicer.ConcatStrings,
                    request_deserializer=strings__pb2.InString.FromString,
                    response_serializer=strings__pb2.OutString.SerializeToString,
            ),
            'LevenshteinDist': grpc.unary_unary_rpc_method_handler(
                    servicer.LevenshteinDist,
                    request_deserializer=strings__pb2.InString.FromString,
                    response_serializer=strings__pb2.LevDist.SerializeToString,
            ),
            'Equal': grpc.unary_unary_rpc_method_handler(
                    servicer.Equal,
                    request_deserializer=strings__pb2.InString.FromString,
                    response_serializer=strings__pb2.Comp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'StringsOps', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class StringsOps(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConcatStrings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StringsOps/ConcatStrings',
            strings__pb2.InString.SerializeToString,
            strings__pb2.OutString.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LevenshteinDist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StringsOps/LevenshteinDist',
            strings__pb2.InString.SerializeToString,
            strings__pb2.LevDist.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Equal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/StringsOps/Equal',
            strings__pb2.InString.SerializeToString,
            strings__pb2.Comp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
